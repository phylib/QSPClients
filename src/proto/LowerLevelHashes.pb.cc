// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LowerLevelHashes.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LowerLevelHashes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace quadtreesync {

namespace {

const ::google::protobuf::Descriptor* LowerLevelHashes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LowerLevelHashes_reflection_ = NULL;
const ::google::protobuf::Descriptor* HashValueList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HashValueList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_LowerLevelHashes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_LowerLevelHashes_2eproto() {
  protobuf_AddDesc_LowerLevelHashes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "LowerLevelHashes.proto");
  GOOGLE_CHECK(file != NULL);
  LowerLevelHashes_descriptor_ = file->message_type(0);
  static const int LowerLevelHashes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowerLevelHashes, numchanges_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowerLevelHashes, treelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowerLevelHashes, hashvalues_),
  };
  LowerLevelHashes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LowerLevelHashes_descriptor_,
      LowerLevelHashes::default_instance_,
      LowerLevelHashes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowerLevelHashes, _has_bits_[0]),
      -1,
      -1,
      sizeof(LowerLevelHashes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowerLevelHashes, _internal_metadata_),
      -1);
  HashValueList_descriptor_ = file->message_type(1);
  static const int HashValueList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HashValueList, hashvalues_),
  };
  HashValueList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HashValueList_descriptor_,
      HashValueList::default_instance_,
      HashValueList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HashValueList, _has_bits_[0]),
      -1,
      -1,
      sizeof(HashValueList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HashValueList, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_LowerLevelHashes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LowerLevelHashes_descriptor_, &LowerLevelHashes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HashValueList_descriptor_, &HashValueList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_LowerLevelHashes_2eproto() {
  delete LowerLevelHashes::default_instance_;
  delete LowerLevelHashes_reflection_;
  delete HashValueList::default_instance_;
  delete HashValueList_reflection_;
}

void protobuf_AddDesc_LowerLevelHashes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_LowerLevelHashes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026LowerLevelHashes.proto\022\014quadtreesync\"j"
    "\n\020LowerLevelHashes\022\022\n\nnumChanges\030\001 \002(\004\022\021"
    "\n\ttreeLevel\030\002 \002(\004\022/\n\nhashValues\030\003 \002(\0132\033."
    "quadtreesync.HashValueList\"#\n\rHashValueL"
    "ist\022\022\n\nhashValues\030\003 \003(\004", 183);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LowerLevelHashes.proto", &protobuf_RegisterTypes);
  LowerLevelHashes::default_instance_ = new LowerLevelHashes();
  HashValueList::default_instance_ = new HashValueList();
  LowerLevelHashes::default_instance_->InitAsDefaultInstance();
  HashValueList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_LowerLevelHashes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_LowerLevelHashes_2eproto {
  StaticDescriptorInitializer_LowerLevelHashes_2eproto() {
    protobuf_AddDesc_LowerLevelHashes_2eproto();
  }
} static_descriptor_initializer_LowerLevelHashes_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LowerLevelHashes::kNumChangesFieldNumber;
const int LowerLevelHashes::kTreeLevelFieldNumber;
const int LowerLevelHashes::kHashValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LowerLevelHashes::LowerLevelHashes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:quadtreesync.LowerLevelHashes)
}

void LowerLevelHashes::InitAsDefaultInstance() {
  hashvalues_ = const_cast< ::quadtreesync::HashValueList*>(&::quadtreesync::HashValueList::default_instance());
}

LowerLevelHashes::LowerLevelHashes(const LowerLevelHashes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:quadtreesync.LowerLevelHashes)
}

void LowerLevelHashes::SharedCtor() {
  _cached_size_ = 0;
  numchanges_ = GOOGLE_ULONGLONG(0);
  treelevel_ = GOOGLE_ULONGLONG(0);
  hashvalues_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LowerLevelHashes::~LowerLevelHashes() {
  // @@protoc_insertion_point(destructor:quadtreesync.LowerLevelHashes)
  SharedDtor();
}

void LowerLevelHashes::SharedDtor() {
  if (this != default_instance_) {
    delete hashvalues_;
  }
}

void LowerLevelHashes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LowerLevelHashes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LowerLevelHashes_descriptor_;
}

const LowerLevelHashes& LowerLevelHashes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LowerLevelHashes_2eproto();
  return *default_instance_;
}

LowerLevelHashes* LowerLevelHashes::default_instance_ = NULL;

LowerLevelHashes* LowerLevelHashes::New(::google::protobuf::Arena* arena) const {
  LowerLevelHashes* n = new LowerLevelHashes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LowerLevelHashes::Clear() {
// @@protoc_insertion_point(message_clear_start:quadtreesync.LowerLevelHashes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LowerLevelHashes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LowerLevelHashes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(numchanges_, treelevel_);
    if (has_hashvalues()) {
      if (hashvalues_ != NULL) hashvalues_->::quadtreesync::HashValueList::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LowerLevelHashes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:quadtreesync.LowerLevelHashes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 numChanges = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numchanges_)));
          set_has_numchanges();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_treeLevel;
        break;
      }

      // required uint64 treeLevel = 2;
      case 2: {
        if (tag == 16) {
         parse_treeLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &treelevel_)));
          set_has_treelevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_hashValues;
        break;
      }

      // required .quadtreesync.HashValueList hashValues = 3;
      case 3: {
        if (tag == 26) {
         parse_hashValues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hashvalues()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:quadtreesync.LowerLevelHashes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:quadtreesync.LowerLevelHashes)
  return false;
#undef DO_
}

void LowerLevelHashes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:quadtreesync.LowerLevelHashes)
  // required uint64 numChanges = 1;
  if (has_numchanges()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->numchanges(), output);
  }

  // required uint64 treeLevel = 2;
  if (has_treelevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->treelevel(), output);
  }

  // required .quadtreesync.HashValueList hashValues = 3;
  if (has_hashvalues()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->hashvalues_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:quadtreesync.LowerLevelHashes)
}

::google::protobuf::uint8* LowerLevelHashes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:quadtreesync.LowerLevelHashes)
  // required uint64 numChanges = 1;
  if (has_numchanges()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->numchanges(), target);
  }

  // required uint64 treeLevel = 2;
  if (has_treelevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->treelevel(), target);
  }

  // required .quadtreesync.HashValueList hashValues = 3;
  if (has_hashvalues()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->hashvalues_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quadtreesync.LowerLevelHashes)
  return target;
}

int LowerLevelHashes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:quadtreesync.LowerLevelHashes)
  int total_size = 0;

  if (has_numchanges()) {
    // required uint64 numChanges = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->numchanges());
  }

  if (has_treelevel()) {
    // required uint64 treeLevel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->treelevel());
  }

  if (has_hashvalues()) {
    // required .quadtreesync.HashValueList hashValues = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hashvalues_);
  }

  return total_size;
}
int LowerLevelHashes::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:quadtreesync.LowerLevelHashes)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 numChanges = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->numchanges());

    // required uint64 treeLevel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->treelevel());

    // required .quadtreesync.HashValueList hashValues = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hashvalues_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LowerLevelHashes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quadtreesync.LowerLevelHashes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LowerLevelHashes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LowerLevelHashes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quadtreesync.LowerLevelHashes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quadtreesync.LowerLevelHashes)
    MergeFrom(*source);
  }
}

void LowerLevelHashes::MergeFrom(const LowerLevelHashes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quadtreesync.LowerLevelHashes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numchanges()) {
      set_numchanges(from.numchanges());
    }
    if (from.has_treelevel()) {
      set_treelevel(from.treelevel());
    }
    if (from.has_hashvalues()) {
      mutable_hashvalues()->::quadtreesync::HashValueList::MergeFrom(from.hashvalues());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LowerLevelHashes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quadtreesync.LowerLevelHashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LowerLevelHashes::CopyFrom(const LowerLevelHashes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quadtreesync.LowerLevelHashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LowerLevelHashes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void LowerLevelHashes::Swap(LowerLevelHashes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LowerLevelHashes::InternalSwap(LowerLevelHashes* other) {
  std::swap(numchanges_, other->numchanges_);
  std::swap(treelevel_, other->treelevel_);
  std::swap(hashvalues_, other->hashvalues_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LowerLevelHashes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LowerLevelHashes_descriptor_;
  metadata.reflection = LowerLevelHashes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LowerLevelHashes

// required uint64 numChanges = 1;
bool LowerLevelHashes::has_numchanges() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LowerLevelHashes::set_has_numchanges() {
  _has_bits_[0] |= 0x00000001u;
}
void LowerLevelHashes::clear_has_numchanges() {
  _has_bits_[0] &= ~0x00000001u;
}
void LowerLevelHashes::clear_numchanges() {
  numchanges_ = GOOGLE_ULONGLONG(0);
  clear_has_numchanges();
}
 ::google::protobuf::uint64 LowerLevelHashes::numchanges() const {
  // @@protoc_insertion_point(field_get:quadtreesync.LowerLevelHashes.numChanges)
  return numchanges_;
}
 void LowerLevelHashes::set_numchanges(::google::protobuf::uint64 value) {
  set_has_numchanges();
  numchanges_ = value;
  // @@protoc_insertion_point(field_set:quadtreesync.LowerLevelHashes.numChanges)
}

// required uint64 treeLevel = 2;
bool LowerLevelHashes::has_treelevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LowerLevelHashes::set_has_treelevel() {
  _has_bits_[0] |= 0x00000002u;
}
void LowerLevelHashes::clear_has_treelevel() {
  _has_bits_[0] &= ~0x00000002u;
}
void LowerLevelHashes::clear_treelevel() {
  treelevel_ = GOOGLE_ULONGLONG(0);
  clear_has_treelevel();
}
 ::google::protobuf::uint64 LowerLevelHashes::treelevel() const {
  // @@protoc_insertion_point(field_get:quadtreesync.LowerLevelHashes.treeLevel)
  return treelevel_;
}
 void LowerLevelHashes::set_treelevel(::google::protobuf::uint64 value) {
  set_has_treelevel();
  treelevel_ = value;
  // @@protoc_insertion_point(field_set:quadtreesync.LowerLevelHashes.treeLevel)
}

// required .quadtreesync.HashValueList hashValues = 3;
bool LowerLevelHashes::has_hashvalues() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LowerLevelHashes::set_has_hashvalues() {
  _has_bits_[0] |= 0x00000004u;
}
void LowerLevelHashes::clear_has_hashvalues() {
  _has_bits_[0] &= ~0x00000004u;
}
void LowerLevelHashes::clear_hashvalues() {
  if (hashvalues_ != NULL) hashvalues_->::quadtreesync::HashValueList::Clear();
  clear_has_hashvalues();
}
const ::quadtreesync::HashValueList& LowerLevelHashes::hashvalues() const {
  // @@protoc_insertion_point(field_get:quadtreesync.LowerLevelHashes.hashValues)
  return hashvalues_ != NULL ? *hashvalues_ : *default_instance_->hashvalues_;
}
::quadtreesync::HashValueList* LowerLevelHashes::mutable_hashvalues() {
  set_has_hashvalues();
  if (hashvalues_ == NULL) {
    hashvalues_ = new ::quadtreesync::HashValueList;
  }
  // @@protoc_insertion_point(field_mutable:quadtreesync.LowerLevelHashes.hashValues)
  return hashvalues_;
}
::quadtreesync::HashValueList* LowerLevelHashes::release_hashvalues() {
  // @@protoc_insertion_point(field_release:quadtreesync.LowerLevelHashes.hashValues)
  clear_has_hashvalues();
  ::quadtreesync::HashValueList* temp = hashvalues_;
  hashvalues_ = NULL;
  return temp;
}
void LowerLevelHashes::set_allocated_hashvalues(::quadtreesync::HashValueList* hashvalues) {
  delete hashvalues_;
  hashvalues_ = hashvalues;
  if (hashvalues) {
    set_has_hashvalues();
  } else {
    clear_has_hashvalues();
  }
  // @@protoc_insertion_point(field_set_allocated:quadtreesync.LowerLevelHashes.hashValues)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HashValueList::kHashValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HashValueList::HashValueList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:quadtreesync.HashValueList)
}

void HashValueList::InitAsDefaultInstance() {
}

HashValueList::HashValueList(const HashValueList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:quadtreesync.HashValueList)
}

void HashValueList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HashValueList::~HashValueList() {
  // @@protoc_insertion_point(destructor:quadtreesync.HashValueList)
  SharedDtor();
}

void HashValueList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HashValueList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HashValueList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HashValueList_descriptor_;
}

const HashValueList& HashValueList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LowerLevelHashes_2eproto();
  return *default_instance_;
}

HashValueList* HashValueList::default_instance_ = NULL;

HashValueList* HashValueList::New(::google::protobuf::Arena* arena) const {
  HashValueList* n = new HashValueList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HashValueList::Clear() {
// @@protoc_insertion_point(message_clear_start:quadtreesync.HashValueList)
  hashvalues_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HashValueList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:quadtreesync.HashValueList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 hashValues = 3;
      case 3: {
        if (tag == 24) {
         parse_hashValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_hashvalues())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_hashvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hashValues;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:quadtreesync.HashValueList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:quadtreesync.HashValueList)
  return false;
#undef DO_
}

void HashValueList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:quadtreesync.HashValueList)
  // repeated uint64 hashValues = 3;
  for (int i = 0; i < this->hashvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->hashvalues(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:quadtreesync.HashValueList)
}

::google::protobuf::uint8* HashValueList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:quadtreesync.HashValueList)
  // repeated uint64 hashValues = 3;
  for (int i = 0; i < this->hashvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->hashvalues(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quadtreesync.HashValueList)
  return target;
}

int HashValueList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:quadtreesync.HashValueList)
  int total_size = 0;

  // repeated uint64 hashValues = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->hashvalues_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->hashvalues(i));
    }
    total_size += 1 * this->hashvalues_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HashValueList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quadtreesync.HashValueList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HashValueList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HashValueList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quadtreesync.HashValueList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quadtreesync.HashValueList)
    MergeFrom(*source);
  }
}

void HashValueList::MergeFrom(const HashValueList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quadtreesync.HashValueList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  hashvalues_.MergeFrom(from.hashvalues_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HashValueList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quadtreesync.HashValueList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HashValueList::CopyFrom(const HashValueList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quadtreesync.HashValueList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HashValueList::IsInitialized() const {

  return true;
}

void HashValueList::Swap(HashValueList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HashValueList::InternalSwap(HashValueList* other) {
  hashvalues_.UnsafeArenaSwap(&other->hashvalues_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HashValueList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HashValueList_descriptor_;
  metadata.reflection = HashValueList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HashValueList

// repeated uint64 hashValues = 3;
int HashValueList::hashvalues_size() const {
  return hashvalues_.size();
}
void HashValueList::clear_hashvalues() {
  hashvalues_.Clear();
}
 ::google::protobuf::uint64 HashValueList::hashvalues(int index) const {
  // @@protoc_insertion_point(field_get:quadtreesync.HashValueList.hashValues)
  return hashvalues_.Get(index);
}
 void HashValueList::set_hashvalues(int index, ::google::protobuf::uint64 value) {
  hashvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:quadtreesync.HashValueList.hashValues)
}
 void HashValueList::add_hashvalues(::google::protobuf::uint64 value) {
  hashvalues_.Add(value);
  // @@protoc_insertion_point(field_add:quadtreesync.HashValueList.hashValues)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
HashValueList::hashvalues() const {
  // @@protoc_insertion_point(field_list:quadtreesync.HashValueList.hashValues)
  return hashvalues_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
HashValueList::mutable_hashvalues() {
  // @@protoc_insertion_point(field_mutable_list:quadtreesync.HashValueList.hashValues)
  return &hashvalues_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace quadtreesync

// @@protoc_insertion_point(global_scope)
